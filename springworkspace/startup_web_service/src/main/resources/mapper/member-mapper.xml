<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.or.iei.member.model.dao.MemberDao">

	<!-- ResultMap 정의 -->
	<resultMap type="kr.or.iei.member.model.dto.Member" id="memberResultMap">
		<result column="user_id" property="userId"/>
		<result column="user_name" property="userName"/>
		<result column="user_pw" property="userPw"/>
		<result column="user_phone" property="userPhone"/>
		<result column="user_email" property="userEmail"/>
		<result column="user_addr" property="userAddr"/>
		<result column="user_level" property="userLevel"/>
		<result column="report_count" property="reportCount"/>
		<result column="ban_until" property="banUntil"/>
	</resultMap>
	
	<resultMap type="kr.or.iei.member.model.dto.Post" id="postResultMap">
		<result column="post_no" property="postNo"/>
		<result column="user_id" property="userId"/>
		<result column="post_type" property="postType"/>
		<result column="post_title" property="postTitle"/>
		<result column="post_content" property="postContent"/>
		<result column="post_date" property="postDate"/>
		<result column="read_count" property="readCount"/>
	</resultMap>
	
	<resultMap type="kr.or.iei.member.model.dto.Market" id="marketResultMap">
		<result column="market_no" property="marketNo"/>
		<result column="user_id" property="userId"/>
		<result column="market_type" property="marketType"/>
		<result column="market_title" property="marketTitle"/>
		<result column="market_content" property="marketContent"/>
		<result column="market_date" property="marketDate"/>
		<result column="read_count" property="readCount"/>
	</resultMap>
	
	<resultMap type="kr.or.iei.member.model.dto.Report" id="reportResultMap">
		<result column="report_id" property="reportId"/>
		<result column="reporter_id" property="reporterId"/>
		<result column="post_type" property="postType"/>
		<result column="post_id" property="postId"/>
		<result column="reason" property="reason"/>
		<result column="report_date" property="reportDate"/>
		<result column="report_status" property="reportStatus"/>
		<result column="admin_id" property="adminId"/>
		<result column="process_date" property="processDate"/>
	</resultMap>

	<!-- 아이디 중복 체크 -->
	<select id="chkUserId" parameterType="String" resultType="int">
		SELECT COUNT(*) FROM t_users WHERE user_id = #{userId}
	</select>
	
	<!-- 이메일 중복 체크 -->
	<select id="chkUserEmail" parameterType="String" resultType="int">
		SELECT COUNT(*) FROM t_users WHERE user_email = #{userEmail}
	</select>
	
	<!-- 회원가입 -->
	<insert id="insertMember" parameterType="kr.or.iei.member.model.dto.Member">
		INSERT INTO t_users (user_id, user_name, user_pw, user_phone, user_email, user_addr, user_level, report_count)
		VALUES (#{userId}, #{userName}, #{userPw}, #{userPhone}, #{userEmail}, #{userAddr}, #{userLevel}, 0)
	</insert>
	
	<!-- 로그인 - 아이디로 회원 정보 조회 -->
	<select id="memberLogin" parameterType="String" resultMap="memberResultMap">
		SELECT * FROM t_users WHERE user_id = #{userId}
	</select>
	
	<!-- 회원 한명 조회 -->
	<select id="selectOneMember" parameterType="String" resultMap="memberResultMap">
		SELECT * FROM t_users WHERE user_id = #{userId}
	</select>
	
	<!-- 회원 정보 수정 -->
	<update id="updateMember" parameterType="kr.or.iei.member.model.dto.Member">
		UPDATE t_users SET 
			user_name = #{userName},
			user_phone = #{userPhone},
			user_email = #{userEmail},
			user_addr = #{userAddr}
		WHERE user_id = #{userId}
	</update>
	
	<!-- 회원 탈퇴 -->
	<delete id="deleteMember" parameterType="String">
		DELETE FROM t_users WHERE user_id = #{userId}
	</delete>
	
	<!-- 비밀번호 변경 -->
	<update id="updateMemberPw" parameterType="kr.or.iei.member.model.dto.Member">
		UPDATE t_users SET user_pw = #{userPw} WHERE user_id = #{userId}
	</update>
	
	<!-- 이메일로 회원 찾기 -->
	<select id="findMemberByEmail" parameterType="String" resultMap="memberResultMap">
		SELECT * FROM t_users WHERE user_email = #{userEmail}
	</select>
	
	<!-- 이메일로 모든 회원 찾기 (중복 이메일의 모든 회원) -->
	<select id="findAllMembersByEmail" parameterType="String" resultMap="memberResultMap">
		SELECT * FROM t_users WHERE user_email = #{userEmail} ORDER BY user_id DESC
	</select>
	
	<!-- 아이디로 회원 찾기 -->
	<select id="findMemberById" parameterType="String" resultMap="memberResultMap">
		SELECT * FROM t_users WHERE user_id = #{userId}
	</select>
	
	<!-- 내가 쓴 게시글 조회 -->
	<select id="selectMyPosts" parameterType="String" resultMap="postResultMap">
		SELECT * FROM t_posts WHERE user_id = #{userId} ORDER BY post_date DESC
	</select>
	
	<!-- 내가 쓴 마켓글 조회 -->
	<select id="selectMyMarkets" parameterType="String" resultMap="marketResultMap">
		SELECT * FROM t_market WHERE user_id = #{userId} ORDER BY market_date DESC
	</select>
	
	<!-- 모든 신고 조회 (관리자용) -->
	<select id="selectAllReports" resultMap="reportResultMap">
		SELECT * FROM t_reports ORDER BY report_date DESC
	</select>
	
	<!-- 신고 처리 상태 업데이트 -->
	<update id="updateReportStatus" parameterType="kr.or.iei.member.model.dto.Report">
		UPDATE t_reports SET 
			report_status = #{reportStatus},
			admin_id = #{adminId},
			process_date = SYSDATE
		WHERE report_id = #{reportId}
	</update>
	
	<!-- 신고 횟수 증가 -->
	<update id="increaseReportCount" parameterType="String">
		UPDATE t_users SET report_count = report_count + 1 WHERE user_id = #{userId}
	</update>
	
	<!-- 회원 이용 제한 -->
	<update id="banMember" parameterType="kr.or.iei.member.model.dto.Member">
		UPDATE t_users SET ban_until = #{banUntil} WHERE user_id = #{userId}
	</update>

</mapper>
